
-- ALTER VIEW BiView.PontualidadeCliente_OMT  AS

SELECT 

	ST.SALESID								AS "Ordem de Venda",
	SL.RECID								AS "Linha", 
	IT.ITEMID								AS "Item - Código",
	CONCAT(IT.ITEMID, ' - ', PR.NAME)		AS "Item - Nome",
	CONCAT(CT.ACCOUNTNUM, ' - ', PT.NAME)	AS "Cliente",
	STATUSOV.STATUS							AS "Status da OV",
	STATUSLOV.STATUS						AS "Status da Linha",
	CONCAT(CFOP.CFOPID, ' - ', CFOP.NAME)	AS "CFOP",

	SL.SALESQTY AS "Qtd. Ordem",
	CIT.QTY		AS "Qtd. Faturada",
	SL.REMAINSALESPHYSICAL AS "Qtd. Entrega Pendente",

	SL.LINEAMOUNT AS "Valor Bruto",
	SL.LINEAMOUNT - COALESCE(ICMS.VALOR, 0.0) - COALESCE(PIS.VALOR, 0.0) - COALESCE(COFINS.VALOR, 0.0) - COALESCE(ISSQN.VALOR, 0.0) AS "Valor Líquido",
	
	CASE WHEN CIT.DLVDATE IS NULL THEN SL.SHIPPINGDATEREQUESTED ELSE CIT.DLVDATE END					AS "Dt. Prometida",
	
	DATAPROMETIDALOV.SEMANA_ANO AS "Dt. Prometida (semana/ano)",
	DATAPROMETIDALOV.MES_ANO	AS "Dt. Prometida (mês/ano)",
	
	CIT.INVOICEDATE AS "Dt. Fatura",
	
	CASE 
		WHEN CIT.INVOICEDATE IS NULL OR CIT.INVOICEDATE > DATEADD(DAY, 2, CIT.DLVDATE) THEN 0 -- Se está em atraso, não conta
		ELSE 
		CASE WHEN SL.REMAINSALESPHYSICAL > 0 THEN
			CASE 
					WHEN (CIT.QTY / SL.SALESQTY) < 0 THEN 0 
					WHEN (CIT.QTY / SL.SALESQTY) > 1 THEN 1 
					ELSE CIT.QTY / SL.SALESQTY
			END
		ELSE
			1
		END
	END AS "Pontualidade (corrigida)",

	CASE 
		WHEN CIT.RECID IS NULL THEN 'Não entregue' -- Se não possui linha de fatura
		WHEN CIT.INVOICEDATE > DATEADD(DAY, 2, CIT.DLVDATE) THEN 'Em atraso' -- Se possui linha, mas em atraso
		WHEN CIT.QTY < SL.SALESQTY THEN 'Entrega parcial' -- Se em dia, mas parcial
		ELSE 'Entrega em dia'
	END AS "Entrega",
	
	CASE WHEN CIT.INVOICEDATE IS NULL THEN 0 ELSE 1 END AS "Possui fatura"
	
FROM SALESTABLE ST
	JOIN SALESLINE SL ON SL.SALESID = ST.SALESID
	LEFT JOIN CUSTINVOICETRANS CIT ON CIT.ORIGSALESID = ST.SALESID AND CIT.INVENTTRANSID = SL.INVENTTRANSID
	LEFT JOIN CUSTINVOICEJOUR CIJ ON CIJ.SALESID = CIT.SALESID
		AND CIJ.INVOICEID = CIT.INVOICEID
		AND CIJ.INVOICEDATE = CIT.INVOICEDATE
		AND CIJ.NUMBERSEQUENCEGROUP = CIT.NUMBERSEQUENCEGROUP
	JOIN CUSTTABLE CT ON CT.ACCOUNTNUM = ST.INVOICEACCOUNT
	JOIN DIRPARTYTABLE PT ON PT.RECID = CT.PARTY
	JOIN INVENTTABLE IT ON IT.ITEMID = SL.ITEMID AND IT.DATAAREAID = SL.DATAAREAID
	JOIN ECORESPRODUCT P ON P.RECID = IT.PRODUCT
	JOIN ECORESPRODUCTTRANSLATION PR ON PR.PRODUCT = P.RECID
	JOIN SALESLINE_BR SLBR ON SLBR.SALESLINE = SL.RECID
	JOIN CFOPTABLE_BR CFOP ON CFOP.RECID = SLBR.CFOPTABLE_BR
	JOIN SALESTABLE_BR STBR ON STBR.SALESTABLE = ST.RECID
	LEFT JOIN SALESPURCHOPERATIONTYPE_BR OT ON OT.RECID = STBR.SALESPURCHOPERATIONTYPE_BR

	CROSS APPLY BiUtil.StatusOrdemVenda(ST.SALESSTATUS) STATUSOV
	CROSS APPLY BiUtil.StatusOrdemVenda(SL.SALESSTATUS) STATUSLOV
	CROSS APPLY BiUtil.DataFiltro(CIT.DLVDATE) DATAPROMETIDAFAT
	CROSS APPLY BiUtil.DataFiltro(SL.SHIPPINGDATEREQUESTED) DATAPROMETIDALOV

	OUTER APPLY BiUtil.ImpostoPorGrupos(SL.DATAAREAID, SL.TAXGROUP, SL.TAXITEMGROUP, 2, SL.LINEAMOUNT) AS ICMS
	OUTER APPLY BiUtil.ImpostoPorGrupos(SL.DATAAREAID, SL.TAXGROUP, SL.TAXITEMGROUP, 1, SL.LINEAMOUNT) AS PIS
	OUTER APPLY BiUtil.ImpostoPorGrupos(SL.DATAAREAID, SL.TAXGROUP, SL.TAXITEMGROUP, 3, SL.LINEAMOUNT) AS COFINS
	OUTER APPLY BiUtil.ImpostoPorGrupos(SL.DATAAREAID, SL.TAXGROUP, SL.TAXITEMGROUP, 4, SL.LINEAMOUNT) AS ISSQN

WHERE ST.DATAAREAID = 'OMT'
	AND SL.SALESQTY <> 0
	AND (( 
		OT.CREATEFINANCIALTRANS = 1 
		AND OT.OPERATIONTYPEID NOT IN (
			'S5412/6412', 'S5413/6413', 'S5553/6553', 'S5556/6556', 'S5201/6201', 'S413', 'S201', 'S5206', 'DC5201', -- devolução de compra
			'S922', 'S5922', 'S6922', -- exclui simples faturamento
			'S5551/6551' -- venda de ativo imobilizado
				)
			)
			OR (OT.DATAAREAID = 'OMT' AND OT.OPERATIONTYPEID = 'S5902/5124' AND CFOP.CFOPID = '5.124') -- operação especial Master
			OR OT.OPERATIONTYPEID IN ('S116', 'S5116', 'S6116') -- inclui simples remessa e operação especial Master
	)
	AND ST.SALESSTATUS <> 4 -- Remove ordens canceladas
	AND SL.SALESSTATUS <> 4 -- Remove linhas canceladas

	--AND SL.REMAINSALESPHYSICAL > 0